<wpf:ResourceDictionary xml:space="preserve" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:ss="urn:shemas-jetbrains-com:settings-storage-xaml" xmlns:wpf="http://schemas.microsoft.com/winfx/2006/xaml/presentation">
	<s:Boolean x:Key="/Default/CodeEditing/Localization/CSharpLocalizationOptions/DontAnalyseVerbatimStrings/@EntryValue">False</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CodeCleanup/SilentCleanupProfile/@EntryValue">Default: Reformat Code</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_CALLS_CHAIN/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/ALIGN_MULTILINE_FOR_STMT/@EntryValue">True</s:Boolean>
	<s:Int64 x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/BLANK_LINES_AROUND_SINGLE_LINE_INVOCABLE/@EntryValue">1</s:Int64>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/EMPTY_BLOCK_STYLE/@EntryValue">TOGETHER</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FIXED_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOR_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_FOREACH_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_IFELSE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_USING_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:String x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/FORCE_WHILE_BRACES_STYLE/@EntryValue">ALWAYS_ADD</s:String>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_FIELD_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/PLACE_SIMPLE_ACCESSOR_ATTRIBUTE_ON_SAME_LINE/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_AFTER_TYPECAST_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_FIXED_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_SIZEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/SPACE_BEFORE_TYPEOF_PARENTHESES/@EntryValue">False</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_DECLARATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_AFTER_INVOCATION_LPAR/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/CodeStyle/CodeFormatting/CSharpFormat/WRAP_BEFORE_FIRST_TYPE_PARAMETER_CONSTRAINT/@EntryValue">True</s:Boolean>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForBuiltInTypes/@EntryValue">UseExplicitType</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForOtherTypes/@EntryValue">UseVarWhenEvident</s:String>
	<s:String x:Key="/Default/CodeStyle/CSharpVarKeywordUsage/ForSimpleTypes/@EntryValue">UseExplicitType</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderRegionName/@EntryValue">File Header</s:String>
	<s:String x:Key="/Default/CodeStyle/FileHeader/FileHeaderText/@EntryValue">-------------------------------------------------------------------------------&#xD;
&#xD;
 Copyright ABB Lorentzen &amp; Wettre AB $CURRENT_YEAR$&#xD;
&#xD;
 The copyright to the computer programs herein is the property of&#xD;
 ABB Lorentzen &amp; Wettre AB. The programs may be used and/or copied only with&#xD;
 the written permission from ABB Lorentzen &amp; Wettre AB or in accordance with&#xD;
 the terms or conditions stipulated in the agreement/contract under which&#xD;
 the programs have been supplied.&#xD;
 The copyright and the foregoing restriction on reproduction, disclosure and use,&#xD;
 extend to all media in which the information may be embodied.&#xD;
&#xD;
-------------------------------------------------------------------------------&#xD;
 File       : $FILENAME$&#xD;
 Author     : $USER_NAME$&#xD;
 Description: //TODO - Description of file $FILENAME$&#xD;
 Notes      :&#xD;
-------------------------------------------------------------------------------&#xD;
</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateInstanceFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="m_" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:String x:Key="/Default/CodeStyle/Naming/CSharpNaming/PredefinedNamingRules/=PrivateStaticFields/@EntryIndexedValue">&lt;Policy Inspect="True" Prefix="m_" Suffix="" Style="AaBb" /&gt;</s:String>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EAddAccessorOwnerDeclarationBracesMigration/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateBlankLinesAroundFieldToBlankLinesAroundProperty/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/Environment/SettingsMigration/IsMigratorApplied/=JetBrains_002EReSharper_002EPsi_002ECSharp_002ECodeStyle_002ESettingsUpgrade_002EMigrateThisQualifierSettings/@EntryIndexedValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/@KeyIndexDefined">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Applicability/=File/@EntryIndexedValue">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Categories/=Imported_002004_002F02_002F2016/@EntryIndexedValue">Imported 04/02/2016</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/CustomProperties/=Extension/@EntryIndexedValue">cs</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/CustomProperties/=FileName/@EntryIndexedValue">AnLWClass</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/CustomProperties/=ValidateFileName/@EntryIndexedValue">False</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Description/@EntryValue">&amp;LW Class</s:String>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=CLASS/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=CLASS/Expression/@EntryValue">getFileNameWithoutExtension()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=CLASS/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=CLASS/Order/@EntryValue">2</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=HEADER/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=HEADER/Expression/@EntryValue">fileheader()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=HEADER/Order/@EntryValue">0</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=NAMESPACE/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=NAMESPACE/Expression/@EntryValue">fileDefaultNamespace()</s:String>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=NAMESPACE/InitialRange/@EntryValue">-1</s:Int64>
	<s:Int64 x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Field/=NAMESPACE/Order/@EntryValue">1</s:Int64>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Reformat/@EntryValue">True</s:Boolean>
	<s:Boolean x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Scope/=E8F0594528C33E45BBFEC6CFE851095D/@KeyIndexDefined">True</s:Boolean>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Scope/=E8F0594528C33E45BBFEC6CFE851095D/Type/@EntryValue">InCSharpProjectFile</s:String>
	<s:String x:Key="/Default/PatternsAndTemplates/LiveTemplates/Template/=6D0ED07999409847A86A6FC51380D4AB/Text/@EntryValue">$HEADER$&#xD;
using System;&#xD;
using System.Collections.Generic;&#xD;
using System.Linq;&#xD;
using System.Text;&#xD;
using System.Threading.Tasks;&#xD;
&#xD;
namespace $END$$NAMESPACE$&#xD;
{//TODO: Check namespace for class $NAMESPACE$.$CLASS$&#xD;
//ABBLW.Autoline[.Function]([.Namespace])*&#xD;
    internal class $CLASS$ : I$CLASS$&#xD;
    {&#xD;
        //Class Content Order&#xD;
		//Public Delegates&#xD;
        //Public Enums&#xD;
        //Static Fields and Constants&#xD;
        //Fields&#xD;
        //Constructors&#xD;
        //Properties, Indexers&#xD;
        //Interface Implementation&#xD;
        //All other members&#xD;
        //Nested Types&#xD;
		&#xD;
        #region Examples to delete&#xD;
&#xD;
        public delegate void SomeCallback(string someString);&#xD;
		&#xD;
        public enum DummyEnum&#xD;
        {&#xD;
            NotDefined,&#xD;
            First,&#xD;
            Second&#xD;
        }&#xD;
&#xD;
        private const int NumberOfWeekdays = 7;&#xD;
&#xD;
        private static double SomeDouble;&#xD;
&#xD;
        private readonly string m_SomeReadOnlyString;&#xD;
&#xD;
        private bool m_SomeBool;&#xD;
&#xD;
        public $CLASS$()&#xD;
        {&#xD;
            //Constructor...&#xD;
            m_SomeReadOnlyString = @"Hello";&#xD;
        }&#xD;
&#xD;
        public double SomeOtherDouble { get; private set; }&#xD;
&#xD;
        public bool SomeBool&#xD;
        {&#xD;
            get { return m_SomeBool; }&#xD;
			set { SetField(ref m_SomeBool, value); }&#xD;
        }&#xD;
&#xD;
        private void SomePrivateMethod()&#xD;
        {&#xD;
            //...&#xD;
        }&#xD;
&#xD;
&#xD;
        private struct SomeNestedStruct&#xD;
        {&#xD;
            //...&#xD;
        }&#xD;
&#xD;
        #endregion //Examples to delete&#xD;
&#xD;
	}&#xD;
}</s:String></wpf:ResourceDictionary>